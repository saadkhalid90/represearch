library()
library()
library(ISLR)
require (ISLR)
require (MASS)
? require
names(Smarket)
summary(Smarker)
summary(Smarket)
?Smarket
pairs(Smarket. col = Smarket$Direction)
pairs(Smarket, col = Smarket$Direction)
glm.fit <- glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data = Smarket, family = binomial)
summary(glm)
summary(glm.fit)
if (is.numeric(age) == FALSE)
{
stop("Shit sucker! give an age argument for FUCKS sake")
else
{
temp <- paste(","," *",as.character(age), " [Yy]ears [Oo]ld", sep="")
temp2 <- paste(":"," *",as.character(age), " [Yy]ears [Oo]ld", sep="")
temp3 <- paste(temp,"|",temp2,sep="")
?attach
.1*.1
.1^3
.9^50
1-(.9^50)
library(xlsReadWrite)
library(xlsReadWrite)
library(xlsReadWrite)
q()
library(xlsReadWrite)
library(ISLR)
require(xlsReadWrite)
library(splines)
library(xlsReadWrite)
install.packages("xlsReadWrite")
install.packages("xlsReadWrite")
install.package(xlsReadWrite)
install.packages(xlsReadWrite)
install.packages("xlsReadWrite")
library(xlsReadWrite)
library(xlsReadWrite)
install.packages("codetools")
install.packages("xlsReadWrite")
library(xlsReadWrite)
update.packages(checkBuilt = TRUE, ask = FALSE)
install.packages("xlsReadWrite")
install.packages("gdata")
?read.xls
?read.xlx
?read.xls()
library('gdata')
library(gdata)
?read.xls()
getwd()
df = read.xls ("SKhalid_7Science.xlsx"), sheet = 2, header = TRUE)
df = read.xls ("SKhalid_7Science.xlsx", sheet = 2, header = TRUE)
install.packages("XLConnect")
library(XLConnect)
install.packages("XLConnect")
install.packages("XLConnect")
install.packages("XLConnect")
install.packages("XLConnect")
install.packages("XLConnect")
install.packages("XLConnect")
install.packages('XLConnect')
df = read.xls ("SKhalid_7Science.xlsx", sheet = 2, header = TRUE)
?read.xls
?read.xls()
library(gdata)
df = read.xls ("SKhalid_7Science.xlsx", sheet = 2, header = TRUE)
View(df)
?read.xls()
df = read.xls ("SKhalid_7Science.xlsx", sheet = 2, header = TRUE, nrows=44)
View(df)
View(df)
df = read.xls ("SKhalid_7Science.xlsx", sheet = 4, header = TRUE, nrows=44)
View(df)
View(df)
df = read.xls ("SKhalid_7Science.xlsx", sheet = 4, header = TRUE, nrows=44, ncol = 9)
?read.table()
df$X3
df[X3]
df["X3"]
getwd()
df[[X1]]
df[1:5,4]
df[1:5,]
df[,1:5]
df[,2]
df
f <- df
getwd()
sk <- read.xls("SKhalid_7Science.xls", sheet = 2)
library(gdata)
sk <- read.xls("SKhalid_7Science.xls", sheet = 2)
install.packeges("XLConnect")
install.packages("XLConnect")
sk <- read.xls("SKhalid_7Science.xls", sheet = 2)
install.packages('gdata')
install.packages("gdata")
?read.table
load("~/R Sessions/Trackers/AQ/12/.RData")
AQData[[1]]$Name
AQData[[1]]$MoY
library(XML)
install('data.table')
install.packages('data.table')
install.packages('data.table')
install.packages('XML')
require('data.table')
require('XML')
install.packages('JSON')
install.packages('data.table')
library('data.table')
library(data.table)
require('data.table')
install.packages('data.table')
require('data.table')
require('XML')
install.packages('xlsx')
require('xlsx')
require('dat.table')
require('data.table')
require('jsonlite')
install.packages('jsonlite')
install.packages("jsonlite")
require('data.table')
require('data.table')
install.packages('plyr')
require('data.table')
install.packages("ggplot2")
libraray(ggplot2)
library(ggplot2)
search()
install.packages("KernSmooth")
library(KernSmooth)
1100 + c(-1,1)*qt(.975,8)*30*(1/9)^.5
1100 + c(-1,1)
qt(.975,8)
2/2.306004
sp <- sqrt((10*0.6^2 + 10*0.68^2)/(9+9))
3-5 + c(-1,1) +qt(.975,18)*sp*(1/9 + 1/9)^.5
sp <- sqrt((10*0.6 + 10*0.68)/(9+9))
3-5 + c(-1,1) +qt(.975,18)*sp*(1/9 + 1/9)^.5
sp <- sqrt (.6)
3-5 + c(-1,1) +qt(.975,18)*sp*(1/9 + 1/9)^.5
sp <- sqrt (.64)
3-5 + c(-1,1) +qt(.975,18)*sp*(1/9 + 1/9)^.5
qt(.975,18)
sp <- sqrt((10*0.6 + 10*0.68)/(9+9))
sp
q<-qt(.975,18)
q*sp
sp <- sqrt((10*0.6 + 10*0.68)/(9+9))
3-5 + c(-1,1)*qt(.975,18)*sp*(1/9 + 1/9)^.5
sp*(1/9+1/9)^.5)
sp*((1/9+1/9)^.5)
sd<-sp*((1/9+1/9)^.5)
q*sd
sp <- sqrt (.6)
3-5 + c(-1,1)*qt(.975,18)*sp*(1/9 + 1/9)^.5
sp <- sqrt (.68)
3-5 + c(-1,1)*qt(.975,18)*sp*(1/9 + 1/9)^.5
sp <- sqrt (.64)
3-5 + c(-1,1)*qt(.975,18)*sp*(1/9 + 1/9)^.5
sp <- sqrt((9*1.5^2 + 9*1.8^2)/(8+8))
-3-1 + c(-1,1)*qt(.95,16)*sp*(1/8 + 1/8)^.5
-3-1 + c(-1,1)*qt(.975,16)*sp*(1/8 + 1/8)^.5
qt(.975,8)
6/2.3
sp <- sqrt((9*1.5^2 + 9*1.8^2)/(9+9))
-3-1 + c(-1,1)*qt(.975,16)*sp*(1/9 + 1/9)^.5
-3-1 + c(-1,1)*qt(.95,16)*sp*(1/9 + 1/9)^.5
pbinom(2, size= 4, prob=.5, lower.tail= FALSE)
1.660*4
x1 <- c(140,138,150,148,135)
x2 <- c(132,135,151,146,130)
mean(x1)
mean(x2)
sd(x1)
sd(x2)
(((6.5)^2)/5)+(((9.20)^2)/5)
sqrt((((6.5)^2)/5)+(((9.20)^2)/5))
3,4/5.037658
3,4/5.037658
3.4/5.037658
pf(.675, 4, lower.tail = FALSE)
pt(.675, 4, lower.tail = FALSE)
pt(.675, 4, lower.tail = FALSE)*2
1.86030
1.860*30
1100+55.8
ppois(9,17.87, lower.tail = FALSE)
ppois(10,17.87, lower.tail = FALSE)
ppois(9,17.87, lower.tail = FALSE)
sqrt((((1.5)^2)/9)+(((1.8)^2)/5))
23/1.86
2.306-1.860
.446*12
1.645*.4
ppois(9,17.87, lower.tail = FALSE)
ppois(9,5, lower.tail = FALSE)
ppois(9,18, lower.tail = FALSE)
10/1787
ppois(5.6,10, lower.tail = FALSE)
ppois(.56,1, lower.tail = FALSE)
t.test(x1,x2, paired = FALSE, var.equal=TRUE)$pval
t.test(x1,x2, paired = FALSE, var.equal=TRUE)$conf
t.test(x1,x2, paired = FALSE, var.equal=TRUE)
?t.test
ppois(.5,1, lower.tail = FALSE)
ppois(.55,1, lower.tail = FALSE)
ppois(.56,1, lower.tail = FALSE)
ppois(.59,1, lower.tail = FALSE)
ppois(.6,1, lower.tail = FALSE)
ppois(1,1, lower.tail = FALSE)
ppois(.8,1, lower.tail = FALSE)
?p.pois
?ppois
ppois(.0056,.01, lower.tail = FALSE)
ppois(999,1787, lower.tail = FALSE)
ppois(1000,1787, lower.tail = FALSE)
ppois(1456,1787, lower.tail = FALSE)
ppois(1456,1787, lower.tail = FALSE)
ppois(9,17.87, lower.tail = FALSE)
ppois(10,17.87, lower.tail = FALSE)
ppois(3,17.87, lower.tail = FALSE)
sqrt(288)
sqrt(289)
?pz
ppois(18,17.87, lower.tail = FALSE)
ppois(9,17.87, lower.tail = FALSE)
ppois(18,(10/1787), lower.tail = FALSE)
ppois(18,10, lower.tail = FALSE)
ppois(17,10, lower.tail = FALSE)
ppois(10,10, lower.tail = FALSE)
ppois(9,10, lower.tail = FALSE)
ppois(2,10, lower.tail = FALSE)
x1
x2
t.test(x1,x2, paired = FALSE, var.equal=TRUE)
?data.frame
print(length(NFSubjects13))
mean(1,5,4,4,4,3,4,4,2,4,4,5,3,1)
?mean
x <- c(1,5,4,4,4,3,4,4,2,4,4,5,3,1)
mean(x)
x <- c(2,4,3,3,4,4,3,4,3,5,5,4,4,2)
mean(x)
x <- c(4,4,4,4,4,2,3,2,3,4,4,5,3,2)
mean(x)
x <- c(1,3,5,5,3,4,1,3,2,3,3,4,4,1)
mean(x)
x <- c(3,3,2,2,4,3,3,4,1,3,3,3,3,4)
mean(x)
x <- c(2,4,4,4,4,4,4,1,4,4,4,3,3,2)
mean(x)
x <- c(8,9,10,10,9,8,4,5,5,7,8,10,3,1)
mean(x)
x <- c(3,5,2,2,4,3,4,1,3,3,5,3,2,1)
mean(x)
x <- c(2,4,3,3,3,4,3,4,3,2,5,4,3,1)
mean(x)
x <- c(4,5,5,5,4,5,5,3,3,5,5,5,4,1)
mean(x)
?with
?transform
library(datasets)
head(airquality)
airquality$Month
a <- airquality$Month
a
summary(a)
transform(airquality, Month=Factor(Month))
transform(airquality, Month=factor(Month))
airquality$Month
summary(airquality$Month)
a
plot(airquality$wind, airquality$ozone)
plot(airquality$Wind, airquality$Ozone)
with(airquality, plot(Wind, Ozone))
install.packages("ggplot2")
library("ggplot2")
head("mpg")
head(mpg)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color= drv)
qplot(displ, hwy, data = mpg, geom = c("points","smooth"))
qplot(displ, hwy, data = mpg, geom = c("point","smooth"))
qplot(hwy, data= mpg, fill=drv)
qplot(displ, hwy, data= mpg, facets = .~drv)
qplot(hwy, data= mpg, facets = drv~.)
qplot(hwy, data= mpg, facets = drv~., binwidth =2)
qplot(hwy, data= mpg, facets = drv~., binwidth =4)
qplot(hwy, data= mpg, facets = drv~., binwidth =1)
qplot(hwy, data= mpg, facets = drv~., binwidth =.5)
qplot(hwy, data= mpg, facets = drv~., binwidth =1)
qplot(hwy, data= mpg, facets = drv~., binwidth =2)
str(maacs)
install.packages("ISLR")
?download.file
getwd()
?dir.create
dir.create("reproducible research")
list.dirs()
?download.file
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "repdata1.zip")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "./reproducible research/repdata1.zip")
?unzip
unzip("./reproducible research/repdata1.zip")
list.file("./reproducible research/")
list.files("./reproducible research/")
unzip("./reproducible research/repdata1.zip")
getwd()
setwd(paste(getwd(),"/reproducible research", ""))
paste(getwd(),"/reproducible research", "")
setwd(paste(getwd(),"/reproducible research",sep=""))
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", "./repdata1.zip")
unzip("./reproducible research/repdata1.zip")
unzip("./repdata1.zip")
list.files("./reproducible research/")
list.files()
projData<-read.csv("activity.csv")
View(projData)
View(projData)
summary(projData$steps)
length(projData$steps)-summary(projData$steps)$NA's
length(projData$steps)
summary(projData$steps)$Min
a <- summary(projData$steps)
a
summary(projData$interval)
table(projData$interval)
24*20
480*5
2400*61
length(projData$interval)
480*61
24*12
288*61
?c
?floor
day <- floor(1:length(projData)/288)
nrows(projData)
nrow(projData)
?ceil
day <- floor(1:nrow(projData)/288)+1
summary(day)
table(day)
?rbind
rbind(projData, day)
projData <- rbind(projData, day)
View(projData)
View(projData)
projData <- cbind(projData, day)
projData<-read.csv("activity.csv")
projData <- cbind(projData, day)
View(projData)
View(projData)
table(day)
day <- floor(0:nrow(projData)-1/288)+1
table(day)
day <- floor((0:(nrow(projData)-1))/288)+1
?factor
day <- floor((0:(nrow(projData)-1))/288)+1
table(day)
x <- factor(1:61,288)
?levels
x <- gl(1:61,288)
x <- gl(61,288)
day <- gl(61,288)
projData <- cbind(projData, day)
View(projData)
View(projData)
projData<-read.csv("activity.csv")
day <- gl(61,288)
projData <- cbind(projData, day)
View(projData)
View(projData)
?aggregate
aggreagate(projData,day,mean())
aggregate(projData,day,mean())
aggregate(projData,by=day,FUN=mean())
aggregate(x= projData,by=day,FUN=mean())
aggregate(projData,by=day,FUN=mean())
aggregate(projData,by=day,FUN=mean(steps))
aggregate(projData,by=day,FUN=mean(projData$steps))
aggregate(projData,by=day,FUN=mean(steps))
aggregate(projData,by=list(day,steps),FUN=mean)
aggregate(projData$steps,by=day,FUN=mean)
aggregate(projData$steps,by=list(day),FUN=mean)
aggregate(projData["steps"],by=list(day),FUN=mean)
byDay<-paste(getwd(),"/reproducible research", "")
names(byDay)
hist(byDay$steps)
hist(byDay)
byDay <- aggregate(projData["steps"],by=data["day"],FUN=mean)
byDay <- aggregate(projData["steps"],by=data[c(day)],FUN=mean)
byDay <- aggregate(projData["steps"],by=list(day),FUN=mean)
hist(byDay$steps)
?hist
hist(byDay$steps, breaks = 1)
hist(byDay$steps)
hist(byDay$steps, breaks = 5)
hist(byDay$steps, breaks = 80)
hist(byDay$steps, breaks = 61)
byDay
barplot(byDay$steps)
names(byday)[1]<-"Day"
names(byDay)[1]<-"Day"
barplot(byDay$day,byDay$steps)
View(byDay)
View(byDay)
